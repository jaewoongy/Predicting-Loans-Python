{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Predicting Loans Project.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dGQPMsHzdEai"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('lending_club_loan_two.csv')"
      ],
      "metadata": {
        "id": "mYOtQ6z9emCi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna()"
      ],
      "metadata": {
        "id": "76zsjPRUgdjI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['loan_status'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z3GZ6uZx1qnh",
        "outputId": "274e8e63-c646-4cde-ba97-f9ee7dd1121d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Fully Paid     269556\n",
              "Charged Off     66312\n",
              "Name: loan_status, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head().transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 957
        },
        "id": "UW0SroiIgd5-",
        "outputId": "a9ba89d3-2239-482d-dbf6-e13decca4563"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                                 0  \\\n",
              "loan_amnt                                                  10000.0   \n",
              "term                                                     36 months   \n",
              "int_rate                                                     11.44   \n",
              "installment                                                 329.48   \n",
              "grade                                                            B   \n",
              "sub_grade                                                       B4   \n",
              "emp_title                                                Marketing   \n",
              "emp_length                                               10+ years   \n",
              "home_ownership                                                RENT   \n",
              "annual_inc                                                117000.0   \n",
              "verification_status                                   Not Verified   \n",
              "issue_d                                                   Jan-2015   \n",
              "loan_status                                             Fully Paid   \n",
              "purpose                                                   vacation   \n",
              "title                                                     Vacation   \n",
              "dti                                                          26.24   \n",
              "earliest_cr_line                                          Jun-1990   \n",
              "open_acc                                                      16.0   \n",
              "pub_rec                                                        0.0   \n",
              "revol_bal                                                  36369.0   \n",
              "revol_util                                                    41.8   \n",
              "total_acc                                                     25.0   \n",
              "initial_list_status                                              w   \n",
              "application_type                                        INDIVIDUAL   \n",
              "mort_acc                                                       0.0   \n",
              "pub_rec_bankruptcies                                           0.0   \n",
              "address               0174 Michelle Gateway\\nMendozaberg, OK 22690   \n",
              "\n",
              "                                                                    1  \\\n",
              "loan_amnt                                                      8000.0   \n",
              "term                                                        36 months   \n",
              "int_rate                                                        11.99   \n",
              "installment                                                    265.68   \n",
              "grade                                                               B   \n",
              "sub_grade                                                          B5   \n",
              "emp_title                                             Credit analyst    \n",
              "emp_length                                                    4 years   \n",
              "home_ownership                                               MORTGAGE   \n",
              "annual_inc                                                    65000.0   \n",
              "verification_status                                      Not Verified   \n",
              "issue_d                                                      Jan-2015   \n",
              "loan_status                                                Fully Paid   \n",
              "purpose                                            debt_consolidation   \n",
              "title                                              Debt consolidation   \n",
              "dti                                                             22.05   \n",
              "earliest_cr_line                                             Jul-2004   \n",
              "open_acc                                                         17.0   \n",
              "pub_rec                                                           0.0   \n",
              "revol_bal                                                     20131.0   \n",
              "revol_util                                                       53.3   \n",
              "total_acc                                                        27.0   \n",
              "initial_list_status                                                 f   \n",
              "application_type                                           INDIVIDUAL   \n",
              "mort_acc                                                          3.0   \n",
              "pub_rec_bankruptcies                                              0.0   \n",
              "address               1076 Carney Fort Apt. 347\\nLoganmouth, SD 05113   \n",
              "\n",
              "                                                                    2  \\\n",
              "loan_amnt                                                     15600.0   \n",
              "term                                                        36 months   \n",
              "int_rate                                                        10.49   \n",
              "installment                                                    506.97   \n",
              "grade                                                               B   \n",
              "sub_grade                                                          B3   \n",
              "emp_title                                                Statistician   \n",
              "emp_length                                                   < 1 year   \n",
              "home_ownership                                                   RENT   \n",
              "annual_inc                                                    43057.0   \n",
              "verification_status                                   Source Verified   \n",
              "issue_d                                                      Jan-2015   \n",
              "loan_status                                                Fully Paid   \n",
              "purpose                                                   credit_card   \n",
              "title                                         Credit card refinancing   \n",
              "dti                                                             12.79   \n",
              "earliest_cr_line                                             Aug-2007   \n",
              "open_acc                                                         13.0   \n",
              "pub_rec                                                           0.0   \n",
              "revol_bal                                                     11987.0   \n",
              "revol_util                                                       92.2   \n",
              "total_acc                                                        26.0   \n",
              "initial_list_status                                                 f   \n",
              "application_type                                           INDIVIDUAL   \n",
              "mort_acc                                                          0.0   \n",
              "pub_rec_bankruptcies                                              0.0   \n",
              "address               87025 Mark Dale Apt. 269\\nNew Sabrina, WV 05113   \n",
              "\n",
              "                                                          3  \\\n",
              "loan_amnt                                            7200.0   \n",
              "term                                              36 months   \n",
              "int_rate                                               6.49   \n",
              "installment                                          220.65   \n",
              "grade                                                     A   \n",
              "sub_grade                                                A2   \n",
              "emp_title                                   Client Advocate   \n",
              "emp_length                                          6 years   \n",
              "home_ownership                                         RENT   \n",
              "annual_inc                                          54000.0   \n",
              "verification_status                            Not Verified   \n",
              "issue_d                                            Nov-2014   \n",
              "loan_status                                      Fully Paid   \n",
              "purpose                                         credit_card   \n",
              "title                               Credit card refinancing   \n",
              "dti                                                     2.6   \n",
              "earliest_cr_line                                   Sep-2006   \n",
              "open_acc                                                6.0   \n",
              "pub_rec                                                 0.0   \n",
              "revol_bal                                            5472.0   \n",
              "revol_util                                             21.5   \n",
              "total_acc                                              13.0   \n",
              "initial_list_status                                       f   \n",
              "application_type                                 INDIVIDUAL   \n",
              "mort_acc                                                0.0   \n",
              "pub_rec_bankruptcies                                    0.0   \n",
              "address               823 Reid Ford\\nDelacruzside, MA 00813   \n",
              "\n",
              "                                                         4  \n",
              "loan_amnt                                          24375.0  \n",
              "term                                             60 months  \n",
              "int_rate                                             17.27  \n",
              "installment                                         609.33  \n",
              "grade                                                    C  \n",
              "sub_grade                                               C5  \n",
              "emp_title                          Destiny Management Inc.  \n",
              "emp_length                                         9 years  \n",
              "home_ownership                                    MORTGAGE  \n",
              "annual_inc                                         55000.0  \n",
              "verification_status                               Verified  \n",
              "issue_d                                           Apr-2013  \n",
              "loan_status                                    Charged Off  \n",
              "purpose                                        credit_card  \n",
              "title                                Credit Card Refinance  \n",
              "dti                                                  33.95  \n",
              "earliest_cr_line                                  Mar-1999  \n",
              "open_acc                                              13.0  \n",
              "pub_rec                                                0.0  \n",
              "revol_bal                                          24584.0  \n",
              "revol_util                                            69.8  \n",
              "total_acc                                             43.0  \n",
              "initial_list_status                                      f  \n",
              "application_type                                INDIVIDUAL  \n",
              "mort_acc                                               1.0  \n",
              "pub_rec_bankruptcies                                   0.0  \n",
              "address               679 Luna Roads\\nGreggshire, VA 11650  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a2cc6cee-96f1-41de-8b6f-8b57de4497e4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_amnt</th>\n",
              "      <td>10000.0</td>\n",
              "      <td>8000.0</td>\n",
              "      <td>15600.0</td>\n",
              "      <td>7200.0</td>\n",
              "      <td>24375.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>term</th>\n",
              "      <td>36 months</td>\n",
              "      <td>36 months</td>\n",
              "      <td>36 months</td>\n",
              "      <td>36 months</td>\n",
              "      <td>60 months</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>int_rate</th>\n",
              "      <td>11.44</td>\n",
              "      <td>11.99</td>\n",
              "      <td>10.49</td>\n",
              "      <td>6.49</td>\n",
              "      <td>17.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>installment</th>\n",
              "      <td>329.48</td>\n",
              "      <td>265.68</td>\n",
              "      <td>506.97</td>\n",
              "      <td>220.65</td>\n",
              "      <td>609.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>grade</th>\n",
              "      <td>B</td>\n",
              "      <td>B</td>\n",
              "      <td>B</td>\n",
              "      <td>A</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sub_grade</th>\n",
              "      <td>B4</td>\n",
              "      <td>B5</td>\n",
              "      <td>B3</td>\n",
              "      <td>A2</td>\n",
              "      <td>C5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emp_title</th>\n",
              "      <td>Marketing</td>\n",
              "      <td>Credit analyst</td>\n",
              "      <td>Statistician</td>\n",
              "      <td>Client Advocate</td>\n",
              "      <td>Destiny Management Inc.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emp_length</th>\n",
              "      <td>10+ years</td>\n",
              "      <td>4 years</td>\n",
              "      <td>&lt; 1 year</td>\n",
              "      <td>6 years</td>\n",
              "      <td>9 years</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>home_ownership</th>\n",
              "      <td>RENT</td>\n",
              "      <td>MORTGAGE</td>\n",
              "      <td>RENT</td>\n",
              "      <td>RENT</td>\n",
              "      <td>MORTGAGE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>annual_inc</th>\n",
              "      <td>117000.0</td>\n",
              "      <td>65000.0</td>\n",
              "      <td>43057.0</td>\n",
              "      <td>54000.0</td>\n",
              "      <td>55000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>verification_status</th>\n",
              "      <td>Not Verified</td>\n",
              "      <td>Not Verified</td>\n",
              "      <td>Source Verified</td>\n",
              "      <td>Not Verified</td>\n",
              "      <td>Verified</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>issue_d</th>\n",
              "      <td>Jan-2015</td>\n",
              "      <td>Jan-2015</td>\n",
              "      <td>Jan-2015</td>\n",
              "      <td>Nov-2014</td>\n",
              "      <td>Apr-2013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_status</th>\n",
              "      <td>Fully Paid</td>\n",
              "      <td>Fully Paid</td>\n",
              "      <td>Fully Paid</td>\n",
              "      <td>Fully Paid</td>\n",
              "      <td>Charged Off</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>purpose</th>\n",
              "      <td>vacation</td>\n",
              "      <td>debt_consolidation</td>\n",
              "      <td>credit_card</td>\n",
              "      <td>credit_card</td>\n",
              "      <td>credit_card</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>title</th>\n",
              "      <td>Vacation</td>\n",
              "      <td>Debt consolidation</td>\n",
              "      <td>Credit card refinancing</td>\n",
              "      <td>Credit card refinancing</td>\n",
              "      <td>Credit Card Refinance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dti</th>\n",
              "      <td>26.24</td>\n",
              "      <td>22.05</td>\n",
              "      <td>12.79</td>\n",
              "      <td>2.6</td>\n",
              "      <td>33.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>earliest_cr_line</th>\n",
              "      <td>Jun-1990</td>\n",
              "      <td>Jul-2004</td>\n",
              "      <td>Aug-2007</td>\n",
              "      <td>Sep-2006</td>\n",
              "      <td>Mar-1999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>open_acc</th>\n",
              "      <td>16.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pub_rec</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>revol_bal</th>\n",
              "      <td>36369.0</td>\n",
              "      <td>20131.0</td>\n",
              "      <td>11987.0</td>\n",
              "      <td>5472.0</td>\n",
              "      <td>24584.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>revol_util</th>\n",
              "      <td>41.8</td>\n",
              "      <td>53.3</td>\n",
              "      <td>92.2</td>\n",
              "      <td>21.5</td>\n",
              "      <td>69.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>total_acc</th>\n",
              "      <td>25.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>43.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>initial_list_status</th>\n",
              "      <td>w</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "      <td>f</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>application_type</th>\n",
              "      <td>INDIVIDUAL</td>\n",
              "      <td>INDIVIDUAL</td>\n",
              "      <td>INDIVIDUAL</td>\n",
              "      <td>INDIVIDUAL</td>\n",
              "      <td>INDIVIDUAL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mort_acc</th>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pub_rec_bankruptcies</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>address</th>\n",
              "      <td>0174 Michelle Gateway\\nMendozaberg, OK 22690</td>\n",
              "      <td>1076 Carney Fort Apt. 347\\nLoganmouth, SD 05113</td>\n",
              "      <td>87025 Mark Dale Apt. 269\\nNew Sabrina, WV 05113</td>\n",
              "      <td>823 Reid Ford\\nDelacruzside, MA 00813</td>\n",
              "      <td>679 Luna Roads\\nGreggshire, VA 11650</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2cc6cee-96f1-41de-8b6f-8b57de4497e4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a2cc6cee-96f1-41de-8b6f-8b57de4497e4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a2cc6cee-96f1-41de-8b6f-8b57de4497e4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def numextract(x):\n",
        "    num = ''\n",
        "    for value in x:\n",
        "        if value.isnumeric():\n",
        "            num += value\n",
        "    return int(num)"
      ],
      "metadata": {
        "id": "6j3DyMjLjFte"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['term'] = df['term'].apply(numextract)\n",
        "df['emp_length'] = df['emp_length'].apply(numextract)"
      ],
      "metadata": {
        "id": "os7kgCQTiOxO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2E0gvS3RonNM",
        "outputId": "65c9773a-5281-45de-db69-1bbaaae1e2c1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 335868 entries, 0 to 396028\n",
            "Data columns (total 27 columns):\n",
            " #   Column                Non-Null Count   Dtype  \n",
            "---  ------                --------------   -----  \n",
            " 0   loan_amnt             335868 non-null  float64\n",
            " 1   term                  335868 non-null  int64  \n",
            " 2   int_rate              335868 non-null  float64\n",
            " 3   installment           335868 non-null  float64\n",
            " 4   grade                 335868 non-null  object \n",
            " 5   sub_grade             335868 non-null  object \n",
            " 6   emp_title             335868 non-null  object \n",
            " 7   emp_length            335868 non-null  int64  \n",
            " 8   home_ownership        335868 non-null  object \n",
            " 9   annual_inc            335868 non-null  float64\n",
            " 10  verification_status   335868 non-null  object \n",
            " 11  issue_d               335868 non-null  object \n",
            " 12  loan_status           335868 non-null  object \n",
            " 13  purpose               335868 non-null  object \n",
            " 14  title                 335868 non-null  object \n",
            " 15  dti                   335868 non-null  float64\n",
            " 16  earliest_cr_line      335868 non-null  object \n",
            " 17  open_acc              335868 non-null  float64\n",
            " 18  pub_rec               335868 non-null  float64\n",
            " 19  revol_bal             335868 non-null  float64\n",
            " 20  revol_util            335868 non-null  float64\n",
            " 21  total_acc             335868 non-null  float64\n",
            " 22  initial_list_status   335868 non-null  object \n",
            " 23  application_type      335868 non-null  object \n",
            " 24  mort_acc              335868 non-null  float64\n",
            " 25  pub_rec_bankruptcies  335868 non-null  float64\n",
            " 26  address               335868 non-null  object \n",
            "dtypes: float64(12), int64(2), object(13)\n",
            "memory usage: 71.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.select_dtypes(include='object').info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gpqCRsbgVIBI",
        "outputId": "e7686733-68a5-4904-d1e2-b323ef2874d0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 335868 entries, 0 to 396028\n",
            "Data columns (total 13 columns):\n",
            " #   Column               Non-Null Count   Dtype \n",
            "---  ------               --------------   ----- \n",
            " 0   grade                335868 non-null  object\n",
            " 1   sub_grade            335868 non-null  object\n",
            " 2   emp_title            335868 non-null  object\n",
            " 3   home_ownership       335868 non-null  object\n",
            " 4   verification_status  335868 non-null  object\n",
            " 5   issue_d              335868 non-null  object\n",
            " 6   loan_status          335868 non-null  object\n",
            " 7   purpose              335868 non-null  object\n",
            " 8   title                335868 non-null  object\n",
            " 9   earliest_cr_line     335868 non-null  object\n",
            " 10  initial_list_status  335868 non-null  object\n",
            " 11  application_type     335868 non-null  object\n",
            " 12  address              335868 non-null  object\n",
            "dtypes: object(13)\n",
            "memory usage: 35.9+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe().transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "y7xNDlC7il0E",
        "outputId": "fed07a4b-b30f-4228-b5d1-332abb48d1a0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         count          mean           std      min       25%  \\\n",
              "loan_amnt             335868.0  14522.747627   8386.593240  1000.00   8000.00   \n",
              "term                  335868.0     41.794562     10.270971    36.00     36.00   \n",
              "int_rate              335868.0     13.795634      4.505201     5.32     10.64   \n",
              "installment           335868.0    445.158837    251.588273    28.75    263.78   \n",
              "emp_length            335868.0      6.103722      3.517867     1.00      3.00   \n",
              "annual_inc            335868.0  75817.159947  61972.188563  5000.00  47000.00   \n",
              "dti                   335868.0     17.719144      8.147837     0.00     11.63   \n",
              "open_acc              335868.0     11.598324      5.181585     1.00      8.00   \n",
              "pub_rec               335868.0      0.184921      0.543618     0.00      0.00   \n",
              "revol_bal             335868.0  16193.056674  20990.685224     0.00   6302.00   \n",
              "revol_util            335868.0     54.365450     23.962637     0.00     36.90   \n",
              "total_acc             335868.0     25.858912     11.901536     2.00     17.00   \n",
              "mort_acc              335868.0      1.802699      2.139647     0.00      0.00   \n",
              "pub_rec_bankruptcies  335868.0      0.125463      0.362258     0.00      0.00   \n",
              "\n",
              "                           50%       75%         max  \n",
              "loan_amnt             12400.00  20000.00    40000.00  \n",
              "term                     36.00     36.00       60.00  \n",
              "int_rate                 13.35     16.78       30.99  \n",
              "installment             388.20    583.79     1533.81  \n",
              "emp_length                6.00     10.00       10.00  \n",
              "annual_inc            65000.00  90000.00  8706582.00  \n",
              "dti                      17.25     23.42      380.53  \n",
              "open_acc                 11.00     14.00       90.00  \n",
              "pub_rec                   0.00      0.00       86.00  \n",
              "revol_bal             11480.00  19990.25  1743266.00  \n",
              "revol_util               55.30     73.00      892.30  \n",
              "total_acc                24.00     33.00      151.00  \n",
              "mort_acc                  1.00      3.00       34.00  \n",
              "pub_rec_bankruptcies      0.00      0.00        8.00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a9b0b79b-783c-4a70-9959-635314693351\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_amnt</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>14522.747627</td>\n",
              "      <td>8386.593240</td>\n",
              "      <td>1000.00</td>\n",
              "      <td>8000.00</td>\n",
              "      <td>12400.00</td>\n",
              "      <td>20000.00</td>\n",
              "      <td>40000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>term</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>41.794562</td>\n",
              "      <td>10.270971</td>\n",
              "      <td>36.00</td>\n",
              "      <td>36.00</td>\n",
              "      <td>36.00</td>\n",
              "      <td>36.00</td>\n",
              "      <td>60.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>int_rate</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>13.795634</td>\n",
              "      <td>4.505201</td>\n",
              "      <td>5.32</td>\n",
              "      <td>10.64</td>\n",
              "      <td>13.35</td>\n",
              "      <td>16.78</td>\n",
              "      <td>30.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>installment</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>445.158837</td>\n",
              "      <td>251.588273</td>\n",
              "      <td>28.75</td>\n",
              "      <td>263.78</td>\n",
              "      <td>388.20</td>\n",
              "      <td>583.79</td>\n",
              "      <td>1533.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emp_length</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>6.103722</td>\n",
              "      <td>3.517867</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>6.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>annual_inc</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>75817.159947</td>\n",
              "      <td>61972.188563</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>47000.00</td>\n",
              "      <td>65000.00</td>\n",
              "      <td>90000.00</td>\n",
              "      <td>8706582.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dti</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>17.719144</td>\n",
              "      <td>8.147837</td>\n",
              "      <td>0.00</td>\n",
              "      <td>11.63</td>\n",
              "      <td>17.25</td>\n",
              "      <td>23.42</td>\n",
              "      <td>380.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>open_acc</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>11.598324</td>\n",
              "      <td>5.181585</td>\n",
              "      <td>1.00</td>\n",
              "      <td>8.00</td>\n",
              "      <td>11.00</td>\n",
              "      <td>14.00</td>\n",
              "      <td>90.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pub_rec</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>0.184921</td>\n",
              "      <td>0.543618</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>86.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>revol_bal</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>16193.056674</td>\n",
              "      <td>20990.685224</td>\n",
              "      <td>0.00</td>\n",
              "      <td>6302.00</td>\n",
              "      <td>11480.00</td>\n",
              "      <td>19990.25</td>\n",
              "      <td>1743266.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>revol_util</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>54.365450</td>\n",
              "      <td>23.962637</td>\n",
              "      <td>0.00</td>\n",
              "      <td>36.90</td>\n",
              "      <td>55.30</td>\n",
              "      <td>73.00</td>\n",
              "      <td>892.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>total_acc</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>25.858912</td>\n",
              "      <td>11.901536</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.00</td>\n",
              "      <td>24.00</td>\n",
              "      <td>33.00</td>\n",
              "      <td>151.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mort_acc</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>1.802699</td>\n",
              "      <td>2.139647</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>34.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>pub_rec_bankruptcies</th>\n",
              "      <td>335868.0</td>\n",
              "      <td>0.125463</td>\n",
              "      <td>0.362258</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>8.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9b0b79b-783c-4a70-9959-635314693351')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a9b0b79b-783c-4a70-9959-635314693351 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a9b0b79b-783c-4a70-9959-635314693351');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['earliest_cr_line'] = pd.to_datetime(df['earliest_cr_line'])\n",
        "df['earliest_cr_line_month'] = df['earliest_cr_line'].apply(lambda date: date.month)\n",
        "df['earliest_cr_line_year'] = df['earliest_cr_line'].apply(lambda date: date.year)"
      ],
      "metadata": {
        "id": "CZeVw_yJ0Oaz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('issue_d', axis = 1)"
      ],
      "metadata": {
        "id": "jCcBCYkaS-qP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('earliest_cr_line', axis = 1)"
      ],
      "metadata": {
        "id": "vW7hn0BrTuCd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sub_grade_dummies = pd.get_dummies(df['sub_grade'], drop_first = True)"
      ],
      "metadata": {
        "id": "pLLemPIQS9ca"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.concat([df.drop(['sub_grade', 'grade'], axis = 1), sub_grade_dummies],axis = 1)"
      ],
      "metadata": {
        "id": "IfybLGaogimi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "FjmYgAVdoaMK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lraoXeDhguQW",
        "outputId": "e3df4eb6-8b99-4073-8fd9-e63f9f7ed968"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['loan_amnt', 'term', 'int_rate', 'installment', 'emp_title',\n",
              "       'emp_length', 'home_ownership', 'annual_inc', 'verification_status',\n",
              "       'loan_status', 'purpose', 'title', 'dti', 'open_acc', 'pub_rec',\n",
              "       'revol_bal', 'revol_util', 'total_acc', 'initial_list_status',\n",
              "       'application_type', 'mort_acc', 'pub_rec_bankruptcies', 'address',\n",
              "       'earliest_cr_line_month', 'earliest_cr_line_year', 'A2', 'A3', 'A4',\n",
              "       'A5', 'B1', 'B2', 'B3', 'B4', 'B5', 'C1', 'C2', 'C3', 'C4', 'C5', 'D1',\n",
              "       'D2', 'D3', 'D4', 'D5', 'E1', 'E2', 'E3', 'E4', 'E5', 'F1', 'F2', 'F3',\n",
              "       'F4', 'F5', 'G1', 'G2', 'G3', 'G4', 'G5'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hpIQW0Txo9Kf",
        "outputId": "117fb3e1-a91e-4bce-e32a-89a78d1e2d41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "59"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def loan(x):\n",
        "    if x == 'Fully Paid':\n",
        "        x = 1\n",
        "    if x == 'Charged Off':\n",
        "        x = 0\n",
        "    return x"
      ],
      "metadata": {
        "id": "L1kT50Hj3E2v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['loan_status_int'] = df['loan_status'].apply(loan)"
      ],
      "metadata": {
        "id": "xErFgxtn3M2q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()['loan_status_int'].sort_values()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pg8nxibD4KQW",
        "outputId": "bb9a30fe-a2a2-4b5a-df2c-55446b6af527"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int_rate                 -0.250679\n",
              "term                     -0.182039\n",
              "dti                      -0.132841\n",
              "revol_util               -0.077498\n",
              "loan_amnt                -0.062386\n",
              "E3                       -0.061973\n",
              "E2                       -0.061036\n",
              "E4                       -0.059679\n",
              "E5                       -0.058360\n",
              "E1                       -0.055700\n",
              "D4                       -0.052535\n",
              "F2                       -0.051237\n",
              "D5                       -0.049802\n",
              "F3                       -0.047336\n",
              "F4                       -0.046531\n",
              "earliest_cr_line_year    -0.045854\n",
              "F1                       -0.045811\n",
              "F5                       -0.043693\n",
              "installment              -0.041973\n",
              "D3                       -0.040241\n",
              "D2                       -0.040039\n",
              "G1                       -0.035589\n",
              "D1                       -0.034046\n",
              "G2                       -0.032343\n",
              "open_acc                 -0.029856\n",
              "G3                       -0.028764\n",
              "C5                       -0.025762\n",
              "G5                       -0.023720\n",
              "C4                       -0.022881\n",
              "G4                       -0.020557\n",
              "pub_rec                  -0.013794\n",
              "C3                       -0.012828\n",
              "pub_rec_bankruptcies     -0.002649\n",
              "C2                        0.001095\n",
              "earliest_cr_line_month    0.002258\n",
              "revol_bal                 0.012010\n",
              "C1                        0.017073\n",
              "total_acc                 0.018628\n",
              "emp_length                0.019225\n",
              "B5                        0.027243\n",
              "B4                        0.041152\n",
              "B3                        0.052077\n",
              "annual_inc                0.052947\n",
              "B2                        0.057528\n",
              "A3                        0.058045\n",
              "A2                        0.058176\n",
              "B1                        0.058688\n",
              "A5                        0.062503\n",
              "A4                        0.063289\n",
              "mort_acc                  0.072490\n",
              "loan_status_int           1.000000\n",
              "Name: loan_status_int, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.select_dtypes(include = 'object').info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i_o4fo-FhPkD",
        "outputId": "0f272977-52b8-4920-eb52-c4d16e388696"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 335868 entries, 0 to 396028\n",
            "Data columns (total 9 columns):\n",
            " #   Column               Non-Null Count   Dtype \n",
            "---  ------               --------------   ----- \n",
            " 0   emp_title            335868 non-null  object\n",
            " 1   home_ownership       335868 non-null  object\n",
            " 2   verification_status  335868 non-null  object\n",
            " 3   loan_status          335868 non-null  object\n",
            " 4   purpose              335868 non-null  object\n",
            " 5   title                335868 non-null  object\n",
            " 6   initial_list_status  335868 non-null  object\n",
            " 7   application_type     335868 non-null  object\n",
            " 8   address              335868 non-null  object\n",
            "dtypes: object(9)\n",
            "memory usage: 25.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "home_dummies = pd.get_dummies(df['home_ownership'], drop_first = True)\n",
        "df = pd.concat([df.drop('home_ownership', axis = 1), home_dummies], axis = 1)"
      ],
      "metadata": {
        "id": "py6lP_uLnpmJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dummies = pd.get_dummies(df[['verification_status', 'purpose', 'initial_list_status', 'application_type']])\n",
        "df = pd.concat([df.drop(['verification_status', 'purpose', 'initial_list_status', 'application_type'], axis = 1), dummies], axis = 1)"
      ],
      "metadata": {
        "id": "O2n6hgqUpGeO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('title', axis = 1)"
      ],
      "metadata": {
        "id": "gwFOFWoKnhJB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('loan_status', axis = 1)"
      ],
      "metadata": {
        "id": "Yg23vTIIliLG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['zip_code'] = df['address'].apply(lambda x: x[-5:])\n",
        "zip_dummies = pd.get_dummies(df['zip_code'], drop_first = True)\n",
        "df = pd.concat([df.drop(['zip_code', 'address'], axis = 1), zip_dummies], axis = 1)"
      ],
      "metadata": {
        "id": "_uJSI9tBj00g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "numerics = ['float64', 'int64', 'uint8']\n",
        "df = df.select_dtypes(include=numerics)"
      ],
      "metadata": {
        "id": "owzW9SSB5CmQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()['loan_status_int']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2OhNJYYXtEtf",
        "outputId": "33e9d1e0-9a03-46cb-f39f-d4b4282f3251"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_amnt     -0.062386\n",
              "term          -0.182039\n",
              "int_rate      -0.250679\n",
              "installment   -0.041973\n",
              "emp_length     0.019225\n",
              "                 ...   \n",
              "30723          0.001133\n",
              "48052         -0.004100\n",
              "70466          0.000524\n",
              "86630         -0.341984\n",
              "93700         -0.344969\n",
              "Name: loan_status_int, Length: 87, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zEFa69hW5iz7",
        "outputId": "b90caabe-d47a-4647-8538-203aefb7ce05"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 335868 entries, 0 to 396028\n",
            "Data columns (total 87 columns):\n",
            " #   Column                               Non-Null Count   Dtype  \n",
            "---  ------                               --------------   -----  \n",
            " 0   loan_amnt                            335868 non-null  float64\n",
            " 1   term                                 335868 non-null  int64  \n",
            " 2   int_rate                             335868 non-null  float64\n",
            " 3   installment                          335868 non-null  float64\n",
            " 4   emp_length                           335868 non-null  int64  \n",
            " 5   annual_inc                           335868 non-null  float64\n",
            " 6   dti                                  335868 non-null  float64\n",
            " 7   open_acc                             335868 non-null  float64\n",
            " 8   pub_rec                              335868 non-null  float64\n",
            " 9   revol_bal                            335868 non-null  float64\n",
            " 10  revol_util                           335868 non-null  float64\n",
            " 11  total_acc                            335868 non-null  float64\n",
            " 12  mort_acc                             335868 non-null  float64\n",
            " 13  pub_rec_bankruptcies                 335868 non-null  float64\n",
            " 14  earliest_cr_line_month               335868 non-null  int64  \n",
            " 15  earliest_cr_line_year                335868 non-null  int64  \n",
            " 16  A2                                   335868 non-null  uint8  \n",
            " 17  A3                                   335868 non-null  uint8  \n",
            " 18  A4                                   335868 non-null  uint8  \n",
            " 19  A5                                   335868 non-null  uint8  \n",
            " 20  B1                                   335868 non-null  uint8  \n",
            " 21  B2                                   335868 non-null  uint8  \n",
            " 22  B3                                   335868 non-null  uint8  \n",
            " 23  B4                                   335868 non-null  uint8  \n",
            " 24  B5                                   335868 non-null  uint8  \n",
            " 25  C1                                   335868 non-null  uint8  \n",
            " 26  C2                                   335868 non-null  uint8  \n",
            " 27  C3                                   335868 non-null  uint8  \n",
            " 28  C4                                   335868 non-null  uint8  \n",
            " 29  C5                                   335868 non-null  uint8  \n",
            " 30  D1                                   335868 non-null  uint8  \n",
            " 31  D2                                   335868 non-null  uint8  \n",
            " 32  D3                                   335868 non-null  uint8  \n",
            " 33  D4                                   335868 non-null  uint8  \n",
            " 34  D5                                   335868 non-null  uint8  \n",
            " 35  E1                                   335868 non-null  uint8  \n",
            " 36  E2                                   335868 non-null  uint8  \n",
            " 37  E3                                   335868 non-null  uint8  \n",
            " 38  E4                                   335868 non-null  uint8  \n",
            " 39  E5                                   335868 non-null  uint8  \n",
            " 40  F1                                   335868 non-null  uint8  \n",
            " 41  F2                                   335868 non-null  uint8  \n",
            " 42  F3                                   335868 non-null  uint8  \n",
            " 43  F4                                   335868 non-null  uint8  \n",
            " 44  F5                                   335868 non-null  uint8  \n",
            " 45  G1                                   335868 non-null  uint8  \n",
            " 46  G2                                   335868 non-null  uint8  \n",
            " 47  G3                                   335868 non-null  uint8  \n",
            " 48  G4                                   335868 non-null  uint8  \n",
            " 49  G5                                   335868 non-null  uint8  \n",
            " 50  loan_status_int                      335868 non-null  int64  \n",
            " 51  MORTGAGE                             335868 non-null  uint8  \n",
            " 52  NONE                                 335868 non-null  uint8  \n",
            " 53  OTHER                                335868 non-null  uint8  \n",
            " 54  OWN                                  335868 non-null  uint8  \n",
            " 55  RENT                                 335868 non-null  uint8  \n",
            " 56  verification_status_Not Verified     335868 non-null  uint8  \n",
            " 57  verification_status_Source Verified  335868 non-null  uint8  \n",
            " 58  verification_status_Verified         335868 non-null  uint8  \n",
            " 59  purpose_car                          335868 non-null  uint8  \n",
            " 60  purpose_credit_card                  335868 non-null  uint8  \n",
            " 61  purpose_debt_consolidation           335868 non-null  uint8  \n",
            " 62  purpose_educational                  335868 non-null  uint8  \n",
            " 63  purpose_home_improvement             335868 non-null  uint8  \n",
            " 64  purpose_house                        335868 non-null  uint8  \n",
            " 65  purpose_major_purchase               335868 non-null  uint8  \n",
            " 66  purpose_medical                      335868 non-null  uint8  \n",
            " 67  purpose_moving                       335868 non-null  uint8  \n",
            " 68  purpose_other                        335868 non-null  uint8  \n",
            " 69  purpose_renewable_energy             335868 non-null  uint8  \n",
            " 70  purpose_small_business               335868 non-null  uint8  \n",
            " 71  purpose_vacation                     335868 non-null  uint8  \n",
            " 72  purpose_wedding                      335868 non-null  uint8  \n",
            " 73  initial_list_status_f                335868 non-null  uint8  \n",
            " 74  initial_list_status_w                335868 non-null  uint8  \n",
            " 75  application_type_DIRECT_PAY          335868 non-null  uint8  \n",
            " 76  application_type_INDIVIDUAL          335868 non-null  uint8  \n",
            " 77  application_type_JOINT               335868 non-null  uint8  \n",
            " 78  05113                                335868 non-null  uint8  \n",
            " 79  11650                                335868 non-null  uint8  \n",
            " 80  22690                                335868 non-null  uint8  \n",
            " 81  29597                                335868 non-null  uint8  \n",
            " 82  30723                                335868 non-null  uint8  \n",
            " 83  48052                                335868 non-null  uint8  \n",
            " 84  70466                                335868 non-null  uint8  \n",
            " 85  86630                                335868 non-null  uint8  \n",
            " 86  93700                                335868 non-null  uint8  \n",
            "dtypes: float64(12), int64(5), uint8(70)\n",
            "memory usage: 68.5 MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y = df['loan_status_int'].values\n",
        "X = df.drop('loan_status_int', axis=1).values"
      ],
      "metadata": {
        "id": "n9uLkaqQ5kvr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.sample(frac=0.1,random_state=101)"
      ],
      "metadata": {
        "id": "0ytbkw8mfbMh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "qLZXDqVE6iYE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=101)"
      ],
      "metadata": {
        "id": "2yhi2hqO6rT5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler"
      ],
      "metadata": {
        "id": "FrtWAw_L53r4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = MinMaxScaler()"
      ],
      "metadata": {
        "id": "9kzUpIjH57v0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = scaler.fit_transform(X_train)"
      ],
      "metadata": {
        "id": "zjpjmKL86eQu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_test = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "tVa3Ihx763_J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Dropout\n"
      ],
      "metadata": {
        "id": "5FfPbotn68bN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OthK6pAr7qLm",
        "outputId": "744db1aa-762c-48db-d53a-14de58b1bf5b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(251901, 86)"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(Dense(86, activation = 'relu'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(43, activation = 'relu'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(21, activation = 'relu'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(1, activation = 'sigmoid'))\n",
        "\n",
        "model.compile(optimizer = 'adam', loss = 'binary_crossentropy')"
      ],
      "metadata": {
        "id": "xgDZ40WP7Twc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.callbacks import EarlyStopping\n",
        "early_stop = EarlyStopping(monitor = 'val_loss', mode='min', verbose=1, patience=20)"
      ],
      "metadata": {
        "id": "RW1cVUKY8vD5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(x=X_train, y=y_train, epochs = 100,\n",
        "          validation_data=(X_test, y_test), callbacks = [early_stop],\n",
        "          batch_size = 256)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0YhCWX1S7Zx2",
        "outputId": "52dd82fa-af73-4180-cb9b-e30cfaa1cf88"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.3484 - val_loss: 0.2701\n",
            "Epoch 2/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2754 - val_loss: 0.2658\n",
            "Epoch 3/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2686 - val_loss: 0.2646\n",
            "Epoch 4/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2662 - val_loss: 0.2645\n",
            "Epoch 5/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2648 - val_loss: 0.2638\n",
            "Epoch 6/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2638 - val_loss: 0.2647\n",
            "Epoch 7/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2636 - val_loss: 0.2639\n",
            "Epoch 8/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2632 - val_loss: 0.2639\n",
            "Epoch 9/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2626 - val_loss: 0.2628\n",
            "Epoch 10/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2623 - val_loss: 0.2633\n",
            "Epoch 11/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2622 - val_loss: 0.2637\n",
            "Epoch 12/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2624 - val_loss: 0.2643\n",
            "Epoch 13/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2620 - val_loss: 0.2636\n",
            "Epoch 14/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2616 - val_loss: 0.2630\n",
            "Epoch 15/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2610 - val_loss: 0.2638\n",
            "Epoch 16/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2611 - val_loss: 0.2635\n",
            "Epoch 17/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2612 - val_loss: 0.2628\n",
            "Epoch 18/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2612 - val_loss: 0.2632\n",
            "Epoch 19/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2607 - val_loss: 0.2623\n",
            "Epoch 20/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2607 - val_loss: 0.2631\n",
            "Epoch 21/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2608 - val_loss: 0.2626\n",
            "Epoch 22/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2604 - val_loss: 0.2624\n",
            "Epoch 23/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2603 - val_loss: 0.2624\n",
            "Epoch 24/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2602 - val_loss: 0.2633\n",
            "Epoch 25/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2602 - val_loss: 0.2639\n",
            "Epoch 26/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2602 - val_loss: 0.2627\n",
            "Epoch 27/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2602 - val_loss: 0.2628\n",
            "Epoch 28/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2603 - val_loss: 0.2624\n",
            "Epoch 29/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2597 - val_loss: 0.2619\n",
            "Epoch 30/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2597 - val_loss: 0.2629\n",
            "Epoch 31/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2599 - val_loss: 0.2631\n",
            "Epoch 32/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2598 - val_loss: 0.2621\n",
            "Epoch 33/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2597 - val_loss: 0.2624\n",
            "Epoch 34/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2594 - val_loss: 0.2626\n",
            "Epoch 35/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2592 - val_loss: 0.2624\n",
            "Epoch 36/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2592 - val_loss: 0.2624\n",
            "Epoch 37/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2589 - val_loss: 0.2630\n",
            "Epoch 38/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2589 - val_loss: 0.2626\n",
            "Epoch 39/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2590 - val_loss: 0.2623\n",
            "Epoch 40/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2590 - val_loss: 0.2628\n",
            "Epoch 41/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2588 - val_loss: 0.2625\n",
            "Epoch 42/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2590 - val_loss: 0.2622\n",
            "Epoch 43/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2589 - val_loss: 0.2622\n",
            "Epoch 44/100\n",
            "984/984 [==============================] - 4s 5ms/step - loss: 0.2591 - val_loss: 0.2625\n",
            "Epoch 45/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2587 - val_loss: 0.2629\n",
            "Epoch 46/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2588 - val_loss: 0.2625\n",
            "Epoch 47/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2583 - val_loss: 0.2630\n",
            "Epoch 48/100\n",
            "984/984 [==============================] - 5s 5ms/step - loss: 0.2585 - val_loss: 0.2627\n",
            "Epoch 49/100\n",
            "984/984 [==============================] - 4s 4ms/step - loss: 0.2584 - val_loss: 0.2635\n",
            "Epoch 49: early stopping\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f2f66256690>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loss = pd.DataFrame(model.history.history)\n",
        "loss.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "8gD0NOGh86q3",
        "outputId": "693487bf-b825-47dd-e1e1-5984f9cb8ecf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f2f623b3f90>"
            ]
          },
          "metadata": {},
          "execution_count": 43
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report, accuracy_score, confusion_matrix"
      ],
      "metadata": {
        "id": "RtoOBF2K-xyM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predictions = model.predict(X_test)"
      ],
      "metadata": {
        "id": "Jors4sGC-iNz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predictions = pd.DataFrame(predictions)"
      ],
      "metadata": {
        "id": "hvrQdyXx_3to"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predictions = predictions.apply(lambda x: round(x))"
      ],
      "metadata": {
        "id": "gJuc3aSM_YaS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, predictions))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D5PHBv-8RPTS",
        "outputId": "cd365082-d09b-4657-da88-a0d68acc3149"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      0.43      0.60     16732\n",
            "           1       0.88      1.00      0.93     67235\n",
            "\n",
            "    accuracy                           0.89     83967\n",
            "   macro avg       0.94      0.71      0.77     83967\n",
            "weighted avg       0.90      0.89      0.87     83967\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test, predictions)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UlXiizMAxAqk",
        "outputId": "85d73773-7f06-418c-c64a-c80c8cedda1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8857765550752081"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, predictions))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xSkrHlUS-2kq",
        "outputId": "1237b45a-408f-46d0-a746-b022d8fd01da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      0.43      0.60     16732\n",
            "           1       0.88      1.00      0.93     67235\n",
            "\n",
            "    accuracy                           0.89     83967\n",
            "   macro avg       0.94      0.71      0.77     83967\n",
            "weighted avg       0.90      0.89      0.87     83967\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test, predictions)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NkDXvI1F-7sk",
        "outputId": "022dd234-d30b-429d-fc79-8bac17bb76d9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8857765550752081"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "random.seed(101)\n",
        "random_ind = random.randint(0,len(df))\n",
        "\n",
        "new_customer = df.drop('loan_status_int', axis = 1).iloc[random_ind]\n",
        "new_customer"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pQiHoPHiAktb",
        "outputId": "edcf6336-7681-4ce3-ccff-3ea5ca92af56"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_amnt      16000.00\n",
              "term              36.00\n",
              "int_rate           9.99\n",
              "installment      516.20\n",
              "emp_length         7.00\n",
              "                 ...   \n",
              "30723              0.00\n",
              "48052              0.00\n",
              "70466              0.00\n",
              "86630              0.00\n",
              "93700              0.00\n",
              "Name: 27000, Length: 86, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(new_customer).transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 174
        },
        "id": "LbeIoeIa_Gu1",
        "outputId": "347c766b-f322-4894-df2b-b750b24c76ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       loan_amnt  term  int_rate  installment  emp_length  annual_inc   dti  \\\n",
              "27000    16000.0  36.0      9.99        516.2         7.0     90000.0  8.03   \n",
              "\n",
              "       open_acc  pub_rec  revol_bal  ...  application_type_JOINT  05113  \\\n",
              "27000       6.0      1.0    14424.0  ...                     0.0    0.0   \n",
              "\n",
              "       11650  22690  29597  30723  48052  70466  86630  93700  \n",
              "27000    0.0    1.0    0.0    0.0    0.0    0.0    0.0    0.0  \n",
              "\n",
              "[1 rows x 86 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-df1b0361-1fd9-41bd-91c4-ffe0dedfd5b4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_amnt</th>\n",
              "      <th>term</th>\n",
              "      <th>int_rate</th>\n",
              "      <th>installment</th>\n",
              "      <th>emp_length</th>\n",
              "      <th>annual_inc</th>\n",
              "      <th>dti</th>\n",
              "      <th>open_acc</th>\n",
              "      <th>pub_rec</th>\n",
              "      <th>revol_bal</th>\n",
              "      <th>...</th>\n",
              "      <th>application_type_JOINT</th>\n",
              "      <th>05113</th>\n",
              "      <th>11650</th>\n",
              "      <th>22690</th>\n",
              "      <th>29597</th>\n",
              "      <th>30723</th>\n",
              "      <th>48052</th>\n",
              "      <th>70466</th>\n",
              "      <th>86630</th>\n",
              "      <th>93700</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27000</th>\n",
              "      <td>16000.0</td>\n",
              "      <td>36.0</td>\n",
              "      <td>9.99</td>\n",
              "      <td>516.2</td>\n",
              "      <td>7.0</td>\n",
              "      <td>90000.0</td>\n",
              "      <td>8.03</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>14424.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1 rows × 86 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df1b0361-1fd9-41bd-91c4-ffe0dedfd5b4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-df1b0361-1fd9-41bd-91c4-ffe0dedfd5b4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-df1b0361-1fd9-41bd-91c4-ffe0dedfd5b4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prediction = model.predict(new_customer.values.reshape(1,86))\n",
        "prediction"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "daiCpwEXxRUF",
        "outputId": "5ca30cd6-2dc0-494c-8099-62505d437019"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.iloc[random_ind]['loan_status_int']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UZmxI2nMyCJw",
        "outputId": "1b523b18-c23b-4c5e-c9ae-73853e5953a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    }
  ]
}
